var firebaseModule = require('../../modules/firebase/firebaseClient');
var firebase = new firebaseModule.Firebase();
var anomalyCheckerModule = require('./anomalyChecker');
var alertGeneratorModule = require('./alertGenerator');

function Packet(packet) {
  this.packet = packet;
  
  //this.lengthSubstring = packet.substring(4,6);
  
  this.deviceSubstring = packet.substring(9,10);
  this.CDMAdevice = this.deviceSubstring === "0";
  this.GSMdevice = this.deviceSubstring === "1";

  if (this.GSMdevice) {
    this.hardwareId = packet.substring(22,26);
    this.eventCode = packet.substring(26,28);   
  } else {
    this.hardwareId = packet.substring(20,26);
    this.eventCode = packet.substring(26,28);
  }
  
  var codes = require("./codes").dictionary;
  this.event = codes[this.eventCode]; 
  
  this.validEvent = this.event !== "Maintenance" && this.event != null && this.event != undefined;
  
}

Packet.prototype.process = function() {
  var anomalyChecker = new anomalyCheckerModule.AnomalyChecker(this);
  this.anomaly = anomalyChecker.anomaly;
  if (!this.anomaly && this.validEvent) {
    this.device();
    this.recordKeen();
    this.updateDevice();
    
    if (this.record.organization) {
      new alertGeneratorModule.AlertGenerator(this);
    }

  }
}

Packet.prototype.device = function() {

  var record = firebase.queryData('devices', {
    orderBy: 'hardwareId',
    equalTo: this.hardwareId
  });
  
  if ( Object.keys(record).length === 0 ) {
    record = {
      hardwareId: this.hardwareId,
      isNew: true,
      createdAt: new Date()
    };
    var newRecord = firebase.postData('devices', record);
    this.key = newRecord.name;
  } else {
	this.key = Object.keys(record)[0];
    record = record[this.key];
  }
  this.record = record;
  return record;
};

Packet.prototype.updateDevice = function() {
  this.record.status = this.event;
  this.record.updatedAt = new Date();
  var endpoint = 'devices/' + this.key;
  firebase.putData(endpoint, this.record);
};

Packet.prototype.recordKeen = function() {
  var time = require('../../modules/utils/time');
  var device = this.record;
  var duration = time.secondsAgo(device.updatedAt);
  var keenModule = require('../../modules/keenio/keenioclient');
  var keen = new keenModule.Keenio("5785561b383144258cf97520");
  keen.recordEvent({
    collection: "device",
    data: {
      device: device,
      event: device.status,
      duration: duration,
      deviceId: device.key,
      packet: this.packet
    }
  });
};