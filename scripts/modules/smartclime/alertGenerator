var firebaseModule = require('../firebase/firebaseClient');
var firebase = new firebaseModule.Firebase();
var firebaseUtils = require('../firebase/utils');
var timeUtils = require('../utils/time');

function AlertGenerator(packet) {
  this.packet = packet;
  this.deviceKey = packet.key;
  this.orgKey = packet.record.organization;

  if (packet.event === "Bypass" || packet.event === "Override") {
	this.handleAlert(packet.event);
  }

  if (packet.event === "Run" || packet.event === "Save") {
    var organization = firebase.getData('organizations/' + this.orgKey);
    if (organization.customerType === "Commercial") {
      var timeZone = organization.timeZone;
      if (timeUtils.isItNight(timeZone) || timeUtils.isItWeekend(timeZone)) {
      	this.handleAlert("Hours");
      }
    }
  }
};

AlertGenerator.prototype.handleAlert = function(alertType) {
  var records = firebase.queryData('alerts', {
    orderBy: 'device',
    equalTo: this.deviceKey,
    limitToLast: 3
  });
  records = firebaseUtils.objectToArray(records);
  var filteredRecords = records.filter(function(record) {
    return record.alertType === alertType;
  });
  filteredRecords = filteredRecords.filter(function(record) {
    return timeUtils.daysAgo(record.createdAt) < 2;
  });
  if (filteredRecords.length === 0) {
    this.generateAlertFromType(alertType);
  }  
};

AlertGenerator.prototype.generateAlertFromType = function(type) {
  var alert = {
    organization: this.orgKey,
    device: this.deviceKey,
    alertType: type,
    createdAt: new Date()
  }
  var newRecord = firebase.postData('alerts', alert);
  this.alertKey = newRecord.name;

  firebase.putData('devices/' + this.deviceKey + '/alerts/' + this.alertKey, true);

  if (this.orgKey) {
    firebase.putData('organizations/' + this.orgKey + '/alerts/' + this.alertKey, true);
  }
};